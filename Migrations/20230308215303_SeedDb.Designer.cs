// <auto-generated />
using System;
using MeFitAPI.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MeFitAPI.Migrations
{
    [DbContext(typeof(MeFitDbContext))]
    [Migration("20230308215303_SeedDb")]
    partial class SeedDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeFitAPI.Models.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "Dam 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Amsterdam",
                            Country = "Netherlands",
                            PostalCode = "1012 JS"
                        },
                        new
                        {
                            Id = 2,
                            AddressLine1 = "Grote Markt 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Groningen",
                            Country = "Netherlands",
                            PostalCode = "9711 LV"
                        },
                        new
                        {
                            Id = 3,
                            AddressLine1 = "Oudegracht 129",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Utrecht",
                            Country = "Netherlands",
                            PostalCode = "3511 AE"
                        },
                        new
                        {
                            Id = 4,
                            AddressLine1 = "Markt 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Breda",
                            Country = "Netherlands",
                            PostalCode = "4811 WG"
                        },
                        new
                        {
                            Id = 5,
                            AddressLine1 = "Keizersgracht 123",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Amsterdam",
                            Country = "Netherlands",
                            PostalCode = "1015 CJ"
                        },
                        new
                        {
                            Id = 6,
                            AddressLine1 = "Grote Marktstraat 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Den Haag",
                            Country = "Netherlands",
                            PostalCode = "2511 BJ"
                        },
                        new
                        {
                            Id = 7,
                            AddressLine1 = "Hoogstraat 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Rotterdam",
                            Country = "Netherlands",
                            PostalCode = "3011 PG"
                        },
                        new
                        {
                            Id = 8,
                            AddressLine1 = "Binnenwegplein 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Rotterdam",
                            Country = "Netherlands",
                            PostalCode = "3012 KA"
                        },
                        new
                        {
                            Id = 9,
                            AddressLine1 = "Vrijthof 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Maastricht",
                            Country = "Netherlands",
                            PostalCode = "6211 LE"
                        },
                        new
                        {
                            Id = 10,
                            AddressLine1 = "Neude 1",
                            AddressLine2 = "",
                            AddressLine3 = "",
                            City = "Utrecht",
                            Country = "Netherlands",
                            PostalCode = "3512 JE"
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TargetMuscleGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A full-body workout that focuses on strengthening your core and improving your balance.",
                            ImageLink = "https://example.com/squats.jpg",
                            Name = "Squats",
                            TargetMuscleGroup = "Legs",
                            VideoLink = "https://youtube.com/watch?v=123"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A high-intensity interval training (HIIT) session that combines cardio and strength training.",
                            ImageLink = "https://example.com/bench-press.jpg",
                            Name = "Bench Press",
                            TargetMuscleGroup = "Chest",
                            VideoLink = "https://youtube.com/watch?v=456"
                        },
                        new
                        {
                            Id = 3,
                            Description = "An upper-body workout that targets your chest, shoulders, and triceps.",
                            ImageLink = "https://example.com/deadlifts.jpg",
                            Name = "Deadlifts",
                            TargetMuscleGroup = "Back",
                            VideoLink = "https://youtube.com/watch?v=789"
                        },
                        new
                        {
                            Id = 4,
                            Description = "A lower-body workout that focuses on toning your legs and glutes.",
                            ImageLink = "https://example.com/pull-ups.jpg",
                            Name = "Pull-Ups",
                            TargetMuscleGroup = "Back",
                            VideoLink = "https://youtube.com/watch?v=abc"
                        },
                        new
                        {
                            Id = 5,
                            Description = "A flexibility and mobility workout that improves your range of motion and prevents injuries.",
                            ImageLink = "https://example.com/push-ups.jpg",
                            Name = "Push-Ups",
                            TargetMuscleGroup = "Chest",
                            VideoLink = "https://youtube.com/watch?v=def"
                        },
                        new
                        {
                            Id = 6,
                            Description = "A cardio workout that gets your heart rate up and burns calories.",
                            ImageLink = "https://example.com/shoulder-press.jpg",
                            Name = "Shoulder Press",
                            TargetMuscleGroup = "Shoulders",
                            VideoLink = "https://youtube.com/watch?v=ghi"
                        },
                        new
                        {
                            Id = 7,
                            Description = "An agility and coordination workout that challenges your reflexes and balance.",
                            ImageLink = "https://example.com/bicep-curls.jpg",
                            Name = "Bicep Curls",
                            TargetMuscleGroup = "Biceps",
                            VideoLink = "https://youtube.com/watch?v=jkl"
                        },
                        new
                        {
                            Id = 8,
                            Description = "A functional training session that simulates real-life movements and improves your overall fitness.",
                            ImageLink = "https://example.com/tricep-extensions.jpg",
                            Name = "Tricep Extensions",
                            TargetMuscleGroup = "Triceps",
                            VideoLink = "https://youtube.com/watch?v=mno"
                        },
                        new
                        {
                            Id = 9,
                            Description = "A plyometric workout that involves explosive movements and enhances your power and speed.",
                            ImageLink = "https://example.com/crunches.jpg",
                            Name = "Crunches",
                            TargetMuscleGroup = "Abs",
                            VideoLink = "https://youtube.com/watch?v=pqr"
                        },
                        new
                        {
                            Id = 10,
                            Description = "A yoga class that promotes relaxation, mindfulness, and body awareness.",
                            ImageLink = "https://example.com/planks.jpg",
                            Name = "Planks",
                            TargetMuscleGroup = "Abs",
                            VideoLink = "https://youtube.com/watch?v=stu"
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsAchieved")
                        .HasColumnType("boolean");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 2
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 3
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 4
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 5
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 6
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 7
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 8
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 9
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateOnly(2023, 12, 31),
                            IsAchieved = false,
                            ProgramId = 10
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.GoalWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("GoalId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GoalWorkouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 1,
                            WorkoutId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 1,
                            WorkoutId = 2
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 2,
                            WorkoutId = 4
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 2,
                            WorkoutId = 3
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 3,
                            WorkoutId = 5
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 3,
                            WorkoutId = 6
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 4,
                            WorkoutId = 7
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 4,
                            WorkoutId = 8
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 5,
                            WorkoutId = 9
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateOnly(2023, 12, 31),
                            GoalId = 5,
                            WorkoutId = 10
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("Disabilities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GoalId")
                        .HasColumnType("integer");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MedicalConditions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Disabilities = "None",
                            GoalId = 1,
                            Height = "170",
                            MedicalConditions = "None",
                            ProgramId = 1,
                            UserId = 1,
                            Weight = "70",
                            WorkoutId = 1
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Disabilities = "None",
                            GoalId = 2,
                            Height = "160",
                            MedicalConditions = "Asthma",
                            ProgramId = 2,
                            UserId = 2,
                            Weight = "65",
                            WorkoutId = 2
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Disabilities = "None",
                            GoalId = 3,
                            Height = "180",
                            MedicalConditions = "Diabetes",
                            ProgramId = 3,
                            UserId = 3,
                            Weight = "80",
                            WorkoutId = 3
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            Disabilities = "None",
                            GoalId = 4,
                            Height = "175",
                            MedicalConditions = "None",
                            ProgramId = 4,
                            UserId = 4,
                            Weight = "75",
                            WorkoutId = 4
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            Disabilities = "None",
                            GoalId = 5,
                            Height = "155",
                            MedicalConditions = "Hypertension",
                            ProgramId = 5,
                            UserId = 5,
                            Weight = "60",
                            WorkoutId = 5
                        },
                        new
                        {
                            Id = 6,
                            AddressId = 6,
                            Disabilities = "Blindness",
                            GoalId = 6,
                            Height = "165",
                            MedicalConditions = "None",
                            ProgramId = 6,
                            UserId = 6,
                            Weight = "70",
                            WorkoutId = 6
                        },
                        new
                        {
                            Id = 7,
                            AddressId = 7,
                            Disabilities = "None",
                            GoalId = 7,
                            Height = "190",
                            MedicalConditions = "Arthritis",
                            ProgramId = 7,
                            UserId = 7,
                            Weight = "85",
                            WorkoutId = 7
                        },
                        new
                        {
                            Id = 8,
                            AddressId = 8,
                            Disabilities = "Deafness",
                            GoalId = 8,
                            Height = "195",
                            MedicalConditions = "None",
                            ProgramId = 8,
                            UserId = 8,
                            Weight = "90",
                            WorkoutId = 8
                        },
                        new
                        {
                            Id = 9,
                            AddressId = 9,
                            Disabilities = "None",
                            GoalId = 9,
                            Height = "150",
                            MedicalConditions = "None",
                            ProgramId = 9,
                            UserId = 9,
                            Weight = "55",
                            WorkoutId = 9
                        },
                        new
                        {
                            Id = 10,
                            AddressId = 10,
                            Disabilities = "None",
                            GoalId = 10,
                            Height = "180",
                            MedicalConditions = "Asthma",
                            ProgramId = 10,
                            UserId = 10,
                            Weight = "80",
                            WorkoutId = 10
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Strength Training",
                            Name = "Beginner's Strength Training"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Running",
                            Name = "Intermediate Running Program"
                        },
                        new
                        {
                            Id = 3,
                            Category = "HIIT",
                            Name = "Advanced HIIT Program"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Yoga",
                            Name = "Beginner's Yoga Program"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Bodyweight",
                            Name = "Intermediate Bodyweight Program"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Weightlifting",
                            Name = "Advanced Weightlifting Program"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Cardio",
                            Name = "Beginner's Cardio Program"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Powerlifting",
                            Name = "Intermediate Powerlifting Program"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Crossfit",
                            Name = "Advanced Crossfit Program"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Stretching",
                            Name = "Beginner's Stretching Program"
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.ProgramWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ProgramWorkouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProgramId = 1,
                            WorkoutId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProgramId = 1,
                            WorkoutId = 2
                        },
                        new
                        {
                            Id = 3,
                            ProgramId = 1,
                            WorkoutId = 3
                        },
                        new
                        {
                            Id = 4,
                            ProgramId = 2,
                            WorkoutId = 4
                        },
                        new
                        {
                            Id = 5,
                            ProgramId = 2,
                            WorkoutId = 5
                        },
                        new
                        {
                            Id = 6,
                            ProgramId = 2,
                            WorkoutId = 6
                        },
                        new
                        {
                            Id = 7,
                            ProgramId = 3,
                            WorkoutId = 7
                        },
                        new
                        {
                            Id = 8,
                            ProgramId = 3,
                            WorkoutId = 8
                        },
                        new
                        {
                            Id = 9,
                            ProgramId = 3,
                            WorkoutId = 9
                        },
                        new
                        {
                            Id = 10,
                            ProgramId = 3,
                            WorkoutId = 10
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<int>("ExerciseRepetitions")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Sets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExerciseId = 1,
                            ExerciseRepetitions = 10
                        },
                        new
                        {
                            Id = 2,
                            ExerciseId = 2,
                            ExerciseRepetitions = 8
                        },
                        new
                        {
                            Id = 3,
                            ExerciseId = 3,
                            ExerciseRepetitions = 12
                        },
                        new
                        {
                            Id = 4,
                            ExerciseId = 4,
                            ExerciseRepetitions = 15
                        },
                        new
                        {
                            Id = 5,
                            ExerciseId = 5,
                            ExerciseRepetitions = 10
                        },
                        new
                        {
                            Id = 6,
                            ExerciseId = 6,
                            ExerciseRepetitions = 8
                        },
                        new
                        {
                            Id = 7,
                            ExerciseId = 7,
                            ExerciseRepetitions = 12
                        },
                        new
                        {
                            Id = 8,
                            ExerciseId = 8,
                            ExerciseRepetitions = 15
                        },
                        new
                        {
                            Id = 9,
                            ExerciseId = 9,
                            ExerciseRepetitions = 10
                        },
                        new
                        {
                            Id = 10,
                            ExerciseId = 10,
                            ExerciseRepetitions = 8
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("isContributor")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "password123",
                            isAdmin = false,
                            isContributor = false
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.com",
                            FirstName = "Jane",
                            LastName = "Doe",
                            Password = "secret456",
                            isAdmin = false,
                            isContributor = true
                        },
                        new
                        {
                            Id = 3,
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "adminpass",
                            isAdmin = true,
                            isContributor = false
                        },
                        new
                        {
                            Id = 4,
                            Email = "alice@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Password = "qwertyuiop",
                            isAdmin = false,
                            isContributor = true
                        },
                        new
                        {
                            Id = 5,
                            Email = "bob@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Password = "asdfghjkl",
                            isAdmin = false,
                            isContributor = false
                        },
                        new
                        {
                            Id = 6,
                            Email = "jimmy@example.com",
                            FirstName = "Jimmy",
                            LastName = "Nguyen",
                            Password = "password",
                            isAdmin = false,
                            isContributor = true
                        },
                        new
                        {
                            Id = 7,
                            Email = "sara@example.com",
                            FirstName = "Sara",
                            LastName = "Kim",
                            Password = "pass123",
                            isAdmin = false,
                            isContributor = false
                        },
                        new
                        {
                            Id = 8,
                            Email = "steve@example.com",
                            FirstName = "Steve",
                            LastName = "Lee",
                            Password = "password1",
                            isAdmin = false,
                            isContributor = true
                        },
                        new
                        {
                            Id = 9,
                            Email = "lisa@example.com",
                            FirstName = "Lisa",
                            LastName = "Garcia",
                            Password = "p@ssw0rd",
                            isAdmin = false,
                            isContributor = false
                        },
                        new
                        {
                            Id = 10,
                            Email = "mike@example.com",
                            FirstName = "Mike",
                            LastName = "Brown",
                            Password = "mypassword",
                            isAdmin = false,
                            isContributor = true
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Complete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SetId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Complete = true,
                            Name = "Squat",
                            SetId = 1,
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 2,
                            Complete = false,
                            Name = "Bench Press",
                            SetId = 2,
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 3,
                            Complete = true,
                            Name = "Deadlift",
                            SetId = 3,
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 4,
                            Complete = true,
                            Name = "Push-up",
                            SetId = 4,
                            Type = "Calisthenics"
                        },
                        new
                        {
                            Id = 5,
                            Complete = false,
                            Name = "Pull-up",
                            SetId = 5,
                            Type = "Calisthenics"
                        },
                        new
                        {
                            Id = 6,
                            Complete = true,
                            Name = "Sprint",
                            SetId = 6,
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 7,
                            Complete = false,
                            Name = "Swimming",
                            SetId = 7,
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 8,
                            Complete = true,
                            Name = "Yoga",
                            SetId = 8,
                            Type = "Flexibility"
                        },
                        new
                        {
                            Id = 9,
                            Complete = true,
                            Name = "Pilates",
                            SetId = 9,
                            Type = "Flexibility"
                        },
                        new
                        {
                            Id = 10,
                            Complete = false,
                            Name = "Jump Rope",
                            SetId = 10,
                            Type = "Cardio"
                        });
                });

            modelBuilder.Entity("MeFitAPI.Models.Domain.Profile", b =>
                {
                    b.HasOne("MeFitAPI.Models.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
